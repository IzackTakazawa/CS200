---
title: "CS200_final_project_draft"
format: html
editor: visual
---

## CS200 Final Project Tutorial

```{r}
#Install packages to connect Rstudio with MySQL

#install.packages("DBI")
#install.packages("RMySQL")
#install.packages("RMariaDB")
```

```{r}
#Load in the correct libraries so you are able to use the packages to connect MYSQL to Rstudio as well as code the tables and query properly

library(DBI)
library(RMySQL)
```

```{r}
#This code connects the project you are currnetly working on in Rstudio to your MYSQL locally on your current computer you are using at this current moment

con <- dbConnect(
  RMySQL::MySQL(),
  dbname = "final_project1",
  host = "localhost",
  port = 3306,
  user = "alex",
  password = "password"
) 

#Follow the directions on creating a new user and password in MYSQL
#You must give all permisions to the user you put in both MYSQL and Rstudio's code above
```

```{r}
con <- dbConnect(
  RMySQL::MySQL(),
  dbname = "final_project1",
  host = "localhost",
  port = 3306,
  user = "izack",
  password = "password"
)
```

```{r}
#Test to see if the connection works with your
dbListTables(con)

```

CREATE BASEBALL TABLE

```{r}
create_bsb_table <- "
CREATE TABLE baseball(
	bsbId INTEGER NOT NULL PRIMARY KEY,
    bsbName VARCHAR(40) NOT NULL,
    bsbPos VARCHAR(5) NULL,
    bsbClass VARCHAR(10),
    bsbHome VARCHAR(30) NOT NULL,
    bsbHigh VARCHAR(30) NOT NULL,
    bsbTransfer VARCHAR(5)
);"
dbExecute(con, create_bsb_table)
```

```{r}
insert_bsb_table <- "
INSERT INTO baseball(bsbId, bsbName, bsbPos, bsbClass, bsbHome, bsbHigh, bsbTransfer)
VALUES (1, 'Alex Greb', 'OF', 'Junior', 'Seattle, Washington', 'Ballard', 'Yes'),
	   (2, 'Izack Takazawa', 'RHP', 'Sophmore', 'Honolulu, Hawaii', 'Iolani', 'Yes'),
       (3, 'Reyn Kapua', 'RHP', 'Sophmore', 'Honolulu, Hawaii', 'Mid-Pac', 'No'),
       (4, 'Trysten Mooney', 'C', 'Junior', 'Helena Montana', 'Capital', 'Yes')
       ;
"
dbExecute(con, insert_bsb_table)
```

```{r}
baseball_table <- dbGetQuery(con, "SELECT * FROM baseball;")
print(baseball_table)

```

CREATE BASKETBALL TABLE

```{r}
create_bkb_table <- "
CREATE TABLE basketball(
	bkbId INTEGER NOT NULL PRIMARY KEY,
    bkbName VARCHAR(40) NOT NULL,
    bkbPos VARCHAR(5) NULL,
    bkbClass VARCHAR(10),
    bkbHome VARCHAR(30) NOT NULL,
    bkbHigh VARCHAR(30) NOT NULL,
    bkbTransfer VARCHAR(5)
);"

dbExecute(con, create_bkb_table)
```

```{r}
insert_bkb_table <- "
INSERT INTO basketball(bkbId, bkbName, bkbPos, bkbClass, bkbHome, bkbHigh, bkbTransfer)
VALUES (1, 'Fletcher MacDonald', 'F', 'Junior', 'Wollongong, Australia', 'Newington College', 'Yes'),
	   (2, 'Kameron Ng', 'G', 'Senior', 'Kaneohe, Hawaii', 'Saint Francis', 'Yes'),
       (3, 'Jamir Thomas', 'G', 'Senior', 'Berkeley, California', 'Berkeley', 'Yes')
       ;
"
dbExecute(con, insert_bkb_table)
```

```{r}
basketball_table <- dbGetQuery(con, "SELECT * FROM basketball;")
print(basketball_table)

```

CREATE COACHES TABLE

```{r}
create_coaches_table <- "
CREATE TABLE coaches (
    coachId INTEGER NOT NULL PRIMARY KEY,
    coachName VARCHAR(40) NOT NULL,
    coachRole VARCHAR(20) NOT NULL,
    coachTeam VARCHAR(10) NOT NULL -- 'Baseball' or 'Basketball'
);"

dbExecute(con, create_coaches_table)
```

```{r}
insert_coaches_table <- "
INSERT INTO coaches (coachId, coachName, coachRole, coachTeam)
VALUES 
    (1, 'Chad Konishi', 'Head Coach', 'Baseball'),
    (2, 'Matt Inouye', 'Assistant Coach', 'Baseball'),
    (3, 'Keith Komeiji', 'Assistant Coach', 'Baseball'),
    (4, 'Chester Wilson', 'Assistant Coach', 'Baseball'),
    (5, 'Randy Yamashiro', 'Assistant Coach', 'Baseball'),
    (6, 'Eric Bovaird', 'Head Coach', 'Basketball'),
    (7, 'Dantley Walker', 'Associate Head Coach', 'Basketball'),
    (8, 'Roman Young', 'Assistant Coach', 'Basketball'),
    (9, 'Arthur King', 'Assistant Coach', 'Basketball');
"
dbExecute(con, insert_coaches_table)
```

```{r}
coaches_table <- dbGetQuery(con, "SELECT * FROM coaches;")
print(coaches_table)

```

\
CREATE ATHLETE_COACHES TABLE

```{r}
create_athlete_coaches_table <- "
CREATE TABLE athlete_coaches(
	bsbId INTEGER NULL,
    bkbId INTEGER NULL,
	coachId INTEGER NOT NULL,
    FOREIGN KEY (bsbId) REFERENCES baseball (bsbId),
    FOREIGN KEY (bkbId) REFERENCES basketball (bkbId),
    FOREIGN KEY (coachId) REFERENCES coaches (coachId)
);
"

dbExecute(con, create_athlete_coaches_table)
```

```{r}
insert_athlete_coaches_table <- "
INSERT INTO athlete_coaches (bsbId, bkbId, coachId)
VALUES 
    (1, NULL, 1), -- Alex Greb
    (1, NULL, 2),
    (1, NULL, 3),
    (1, NULL, 4),
    (1, NULL, 5),
    
	(2, NULL, 1), -- Izack Takazawa
    (2, NULL, 2),
    (2, NULL, 3),
    (2, NULL, 4),
    (2, NULL, 5),
	
    (3, NULL, 1), -- Reyn Kapua
    (3, NULL, 2),
    (3, NULL, 3),
    (3, NULL, 4),
    (3, NULL, 5),
    
	(4, NULL, 1), -- Trysten Mooney
    (4, NULL, 2),
    (4, NULL, 3),
    (4, NULL, 4),
    (4, NULL, 5),
    
    (NULL, 1, 6), -- Fletcher MacDonald
    (NULL, 1, 7),
    (NULL, 1, 8),
    (NULL, 1, 9),
    
    (NULL, 2, 6), -- Kameron Ng
    (NULL, 2, 7), 
    (NULL, 2, 8), 
    (NULL, 2, 9),
    
    (NULL, 3, 6), -- Jamir Thomas
    (NULL, 3, 7), 
    (NULL, 3, 8),
    (NULL, 3, 9);
"
dbExecute(con, insert_athlete_coaches_table)
```

```{r}
athlete_coaches_table <- dbGetQuery(con, "SELECT * FROM athlete_coaches;")
print(athlete_coaches_table)
```

##QUERRY FROM BASEBALL/BASKETBALL DATASET

1\) QUERY TRANSFER PLAYERS ON BASEBALL TEAM

```{r}
query_transfer_bsb_players <- "SELECT bsbName FROM baseball WHERE bsbTransfer = 'Yes';"

result_transfer_bsb_players <- dbGetQuery(con, query_transfer_bsb_players)

print(result_transfer_bsb_players)
```

2\) QUERY TRANSFER PLAYERS ON BASEBALL TEAM

```{r}
query_transfer_bkb_players <- "SELECT bkbName FROM basketball WHERE bkbTransfer = 'Yes';"  

result_transfer_bkb_players <- dbGetQuery(con, query_transfer_bkb_players)  

print(result_transfer_bkb_players)
```

3\) QUERY ALL JUNIOR BASEBALL PLAYERS ON BASEBALL TEAM

```{r}
query_junior_bsb_players <- "SELECT * FROM baseball WHERE bsbClass = 'Junior';"

result_junior_bsb_players <- dbGetQuery(con, query_junior_bsb_players)

print(result_junior_bsb_players)
```

4\) QUERY ALL JUNIOR BASKETBALL PLAYERS ON BASEBALL TEAM

```{r}
query_junior_bkb_players <- "SELECT * FROM basketball WHERE bkbClass = 'Junior';"  

result_junior_bkb_players <- dbGetQuery(con, query_junior_bkb_players)  

print(result_junior_bkb_players)
```

5\) QUERY PLAYERS COACHED UNDER CHAD KONISHI - HEAD BASEBALL COACH

```{r}
query_coaches_bsb_players <- "
SELECT bsbName AS athlete_name, coachName
FROM baseball b
JOIN athlete_coaches ac ON b.bsbId = ac.bsbId
JOIN coaches c ON ac.coachId = c.coachId
WHERE c.coachName = 'Chad Konishi';"

result_coaches_bsb_players <- dbGetQuery(con, query_coaches_bsb_players)

print(result_coaches_bsb_players)

```

6\) QUERY PLAYERS COACHED UNDER ERIC BOVAIRD- HEAD BASKETBALL COACH

```{r}
query_coaches_bkb_players <- " 
SELECT bkbName AS athlete_name, coachName 
FROM basketball b 
JOIN athlete_coaches ac ON b.bkbId = ac.bkbId 
JOIN coaches c ON ac.coachId = c.coachId 
WHERE c.coachName = 'Eric Bovaird';" 

result_coaches_bkb_players <- dbGetQuery(con, query_coaches_bkb_players)  

print(result_coaches_bkb_players) 
```

```{r}
dbDisconnect(con)
```

\##############################################################################################################################################################################################################################
